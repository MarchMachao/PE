<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.vito.coding.check.mapper.UserDao">

<!-- 教职工用户管理 -->
	<select id="findUserByUserName" parameterType="String"
		resultType="user">
		select * from s_user where s_user.userName = #{value}
	</select>
	
	<!-- 查询所有的用户数据 -->
	<select id="findAllUser" parameterType="UserLike" resultType="user">
		SELECT
			t.userName,t.nickName,t.role
		FROM
			s_user t
		WHERE
			t.role != '学生'
			AND t.nickName LIKE '%${nickName}%'
			AND t.role LIKE '%${role}%'
		limit #{page},#{rows}
	</select>
	
	<!-- 查询所有的用户数据总数量 -->
	<select id="count" resultType="int">
		select count(*) from s_user
	</select>
	
	<!-- 更新学生的密码 -->
	<update id="updateUser" parameterType="User">
		update s_user
		<set>
			<if test="userName!=null">
				userName = #{userName},
			</if>
			<if test="password!=null">
				password = #{password},
			</if>
			<if test="nickName!=null">
				nickName = #{nickName},
			</if>
			<if test="role!=null">
				role = #{role},
			</if>
		</set>
		where userName=#{userName}
	</update>
	
	<!-- 增加新的数据 -->
	<insert id="addUser" parameterType="user">
		insert into
			s_user(userName,password, nickName, role) 
		VALUES(#{userName},#{password},#{nickName},#{role})
	</insert>
	
	<!-- 删除用户数据 -->
	<delete id="deleteUserByName" parameterType="String">
		delete from s_user where userName = #{userName}
	</delete>
	
<!-- 学生用户管理 -->
	
	<!-- 查询所有的用户数据 -->
	<select id="findStudentUser" parameterType="UserLike" resultType="UserLike">
	
		SELECT
			t1.userName,
			t2.name,
			t1.role,
			t2.gender,
			t2.school,
			t2.classes,
			t2.grade,
			t2.duration,
			t2.state,
			t2.teacher
		FROM
			s_user t1,
			a_student t2
		WHERE
			  t1.userName = t2.id
		  AND t1.role = '学生'
		  AND t2.name LIKE '%${name}%'
		  AND t2.school LIKE '%${school}%'
		  AND t2.grade LIKE '%${grade}%'
		  AND t2.teacher LIKE '%${teacher}%'
		  AND t2.state LIKE '%${state}%'
		ORDER BY
		  t2.grade DESC,
		  t1.userName
		limit #{page},#{rows}
		
	</select>
	
	<!-- 插入数据 -->
	<insert id="addStudentUser1" parameterType="user">
		insert into
			s_user(userName,password,nickName,role) 
		VALUES(#{userName},#{password},#{nickName},#{role});
	</insert>
	
	<insert id="addStudentUser2" parameterType="student">
		insert into
			a_student(id,name,gender, school, grade,classes,duration,state,teacher) 
		VALUES(#{id},#{name},#{gender},#{school},#{grade},#{classes},#{duration},#{state},#{teacher})
	</insert>
	
	<!-- 删除数据 -->
	<delete id="deleteStudentUser" parameterType="string">
		DELETE a_student,
		 s_user
		FROM
			a_student
		LEFT JOIN s_user ON a_student.id = s_user.userName
		WHERE
			s_user.userName = #{userName}
	</delete>
	
	<!-- 更新数据 -->
	<update id="updateStudentUser" parameterType="UserLike">
		UPDATE s_user t1
		 	LEFT JOIN a_student t2 ON t1.userName = t2.id
			<set>
				<if test="userName!=null">
					t1.userName = #{userName},
				</if>
				<if test="password!=null">
					t1.password = #{password},
				</if>
				<if test="nickName!=null">
					t1.nickName = #{nickName},
				</if>
				<if test="id!=null">
					t2.id = #{id},
				</if>
				<if test="name!=null">
					t2.name = #{name},
				</if>
				<if test="gender!=null">
					t2.gender = #{gender},
				</if>
				<if test="school!=null">
					t2.school = #{school},
				</if>
				<if test="grade!=null">
					t2.grade = #{grade},
				</if>
				<if test="classes!=null">
					t2.classes = #{classes},
				</if>
				<if test="duration!=null">
					t2.duration = #{duration},
				</if>
				<if test="state!=null">
					t2.state = #{state},
				</if>
				<if test="teacher!=null">
					t2.teacher = #{teacher}
				</if>
			</set>
		where t1.userName=#{userName}
	</update>
	
	
	<!-- 导入Excel表格 -->
	
	<insert id="addExcelStudent1" parameterType="java.util.List">
		insert into
			s_user(userName,password,nickName,role)
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.userName},#{item.password},#{item.nickName},#{item.role})
		</foreach>
	</insert>
	
	<insert id="addExcelStudent2" parameterType="java.util.List">
		insert into
			a_student(id,name,gender, school, grade,classes,duration,state,teacher) 
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.id},#{item.name},#{item.gender},#{item.school},#{item.grade},
			 #{item.classes},#{item.duration},#{item.state},#{item.teacher})
		</foreach>
	</insert>
	
</mapper>