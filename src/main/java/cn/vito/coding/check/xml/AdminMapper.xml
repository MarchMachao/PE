<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.vito.coding.check.mapper.AdminDao">

	
	<!-- 管理员页面查询未毕业所有的数据 -->
	<select id="findAdminData" parameterType="TeacherAndAcademyLike" resultType="TeacherAndAcademy">
		SELECT
			a_data.id,
			a_student.name,
			a_student.gender,
			a_student.school,
			a_student.grade,
			a_student.classes,
			a_student.duration,
			a_student.state,
			a_student.teacher,
			a_data.year,
			a_data.height,
			a_data.weight,
			a_data.vital_capacity,
			a_data.fivem,
			a_data.long_jump,
			a_data.reach,
			a_data.eightm,
			a_data.tenm,
			a_data.sit_ups,
			a_data.pull_up,
			a_data.score,
			a_data.first_check,
			a_data.second_check
		FROM
			a_data,
			a_student
		WHERE
			a_data.id = a_student.id
		AND a_student.state != '已毕业'
		AND a_data.id LIKE '%${id}%'
		AND a_student.name LIKE '%${name}%'
		AND a_student.school LIKE '%${school}%'
		AND a_student.teacher LIKE '%${teacher}%'
		AND a_data.year LIKE '%${year}%'
		ORDER BY
			a_data.year DESC,
			a_data.id
		limit #{page},#{rows}
	</select>
	
	
	<!-- 管理员页面查询已毕业所有的数据 -->
	<select id="findAdminGraduateData" parameterType="TeacherAndAcademyLike" resultType="TeacherAndAcademy">
		SELECT
			a_data.id,
			a_student. NAME,
			a_student.gender,
			a_student.school,
			a_student.grade,
			a_student.classes,
			a_student.duration,
			a_student.state,
			a_student.teacher,
			a_data. YEAR,
			a_data.height,
			a_data.weight,
			a_data.vital_capacity,
			a_data.fivem,
			a_data.long_jump,
			a_data.reach,
			a_data.eightm,
			a_data.tenm,
			a_data.sit_ups,
			a_data.pull_up,
			a_data.score,
			a_data.first_check,
			a_data.second_check
		FROM
			a_data,
			a_student
		WHERE
			a_data.id = a_student.id
		AND a_student.state = '已毕业'
		AND a_student.name LIKE '%${name}%'
		AND a_student.school LIKE '%${school}%'
		AND a_student.teacher LIKE '%${teacher}%'
		AND a_data.year LIKE '%${year}%'
		ORDER BY
			a_data.year DESC,
			a_data.id
		limit #{page},#{rows}
	</select>

	<!-- 修改管理员页面的数据 -->
	<update id="updateAdminData" parameterType="Data">
		update a_data
			<set>
				<if test="height!=null">
					height = #{height},
				</if>
				<if test="weight!=null">
					weight = #{weight},
				</if>
				<if test="vital_capacity!=null">
					vital_capacity = #{vital_capacity},
				</if>
				<if test="fivem!=null">
					fivem = #{fivem},
				</if>
				<if test="long_jump!=null">
					long_jump = #{long_jump},
				</if>
				<if test="reach!=null">
					reach = #{reach},
				</if>
				<if test="eightm!=null">
					eightm = #{eightm},
				</if>
				<if test="tenm!=null">
					tenm = #{tenm},
				</if>
				<if test="sit_ups!=null">
					sit_ups = #{sit_ups},
				</if>
				<if test="pull_up!=null">
					pull_up = #{pull_up},
				</if>
				<if test="score!=null">
					score = #{score},
				</if>
				<if test="first_check!=null">
					first_check = #{first_check},
				</if>
				<if test="second_check!=null">
					second_check = #{second_check},
				</if>
			</set>
			where id = #{id} and year = #{year}
	</update>
	
	<!-- 学生与教师对应关系管理页面查询数据 -->
	<select id="findTeachersToStudentData" parameterType="TeacherToStudent" resultType="TeacherToStudent">
		SELECT
			a.id AS studentId,
			a. NAME,
			a.gender,
			a.grade,
			a.school,
			b. YEAR,
			b.teacher,
			b.subjectid,
			b.subjectname
		FROM
			a_student a
		LEFT JOIN a_teacher b ON a.id = b.studentid
		WHERE
			a.state != '已毕业'
		AND a.teacher ='老师'
		AND	a.id LIKE '%${studentId}%'
		AND a.school LIKE '%${school}%'
		<if test="year!=null">
			AND b.YEAR LIKE '%${year}%'
		</if>
		<if test="teacher!=null">
			AND b.teacher LIKE '%${teacher}%'
		</if>
		<if test="subjectId!=null">
			AND b.subjectid LIKE '%${subjectId}%'
		</if>
		<if test="subjectName!=null">
			AND b.subjectname LIKE '%${subjectName}%'
		</if>
		ORDER BY
			b. YEAR DESC,
			a.id
		LIMIT #{page},#{rows}
	</select>
	
	<!-- 学生与教师对应关系管理页面增加一条数据 -->
	<insert id="addOneTeacherToStudentData" parameterType="TeacherToStudent">
		insert into a_teacher (studentid,year,teacher,subjectid,subjectname) 
		values (#{studentId},#{year},#{teacher},#{subjectId},#{subjectName})
	</insert>
	
	<!-- 学生与教师对应关系管理页面导入数据 -->
	<insert id="addTeacherToStudentDatas" parameterType="java.util.List">
		insert into a_teacher (studentid,year,teacher,subjectid,subjectname) 
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.studentId},
			#{item.year},
			#{item.teacher},
			#{item.subjectId},
			#{item.subjectName}
			)
		</foreach> 
	</insert>
	
	<!-- 学生与教师对应关系管理页面删除数据 -->
	<delete id="deleteTeacherToStudentData" parameterType="TeacherToStudent">
		delete from a_teacher where studentid=#{studentId} and year=#{year}
	</delete>
	
	<!-- 学生与教师对应关系管理页面修改数据 -->
	<update id="updateTeacherToStudentData" parameterType="TeacherToStudent">
		update a_teacher
		<set>
			<if test="teacher!=null">
				teacher=#{teacher},
			</if>
			<if test="subjectId!=null">
				subjectid=#{subjectId},
			</if>
			<if test="subjectName!=null">
				subjectname=#{subjectName}
			</if>
		</set>
		where studentid=#{studentId} and year=#{year}
	</update>
	
	<insert id="addOneStudentData" parameterType="Data">
		INSERT INTO a_data VALUES (#{id},#{year},#{height},#{weight},#{vital_capacity}, #{fivem},#{long_jump},
		#{reach},#{eightm},#{tenm},#{sit_ups},#{pull_up},#{score},#{first_check},#{second_check})
	</insert>
	
	<insert id="addListStudentDatas" parameterType="java.util.List">
		INSERT INTO a_data (id,year,height,weight,vital_capacity, fivem,long_jump,
		reach,eightm,tenm,sit_ups,pull_up,score,first_check,second_check) VALUES 
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.id},
			#{item.year},
			#{item.height},
			#{item.weight},
			#{item.vital_capacity},
			#{item.fivem},
			#{item.long_jump},
			#{item.reach},
			#{item.eightm},
			#{item.tenm},
			#{item.sit_ups},
			#{item.pull_up},
			#{item.score},
			#{item.first_check},
			#{first_check},
			#{second_check}
			)
		</foreach>
	</insert>
</mapper>